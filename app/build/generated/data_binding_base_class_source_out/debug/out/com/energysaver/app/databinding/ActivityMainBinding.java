// Generated by view binder compiler. Do not edit!
package com.energysaver.app.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.camera.view.PreviewView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.energysaver.app.R;
import com.google.android.material.button.MaterialButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final PreviewView cameraPreview;

  @NonNull
  public final LinearLayout controlPanel;

  @NonNull
  public final View detectionIndicator;

  @NonNull
  public final TextView detectionStatusText;

  @NonNull
  public final TextView errorText;

  @NonNull
  public final ProgressBar loadingProgress;

  @NonNull
  public final MaterialButton toggleButton;

  @NonNull
  public final View torchIndicator;

  @NonNull
  public final TextView torchStatusText;

  private ActivityMainBinding(@NonNull ConstraintLayout rootView,
      @NonNull PreviewView cameraPreview, @NonNull LinearLayout controlPanel,
      @NonNull View detectionIndicator, @NonNull TextView detectionStatusText,
      @NonNull TextView errorText, @NonNull ProgressBar loadingProgress,
      @NonNull MaterialButton toggleButton, @NonNull View torchIndicator,
      @NonNull TextView torchStatusText) {
    this.rootView = rootView;
    this.cameraPreview = cameraPreview;
    this.controlPanel = controlPanel;
    this.detectionIndicator = detectionIndicator;
    this.detectionStatusText = detectionStatusText;
    this.errorText = errorText;
    this.loadingProgress = loadingProgress;
    this.toggleButton = toggleButton;
    this.torchIndicator = torchIndicator;
    this.torchStatusText = torchStatusText;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.camera_preview;
      PreviewView cameraPreview = ViewBindings.findChildViewById(rootView, id);
      if (cameraPreview == null) {
        break missingId;
      }

      id = R.id.control_panel;
      LinearLayout controlPanel = ViewBindings.findChildViewById(rootView, id);
      if (controlPanel == null) {
        break missingId;
      }

      id = R.id.detection_indicator;
      View detectionIndicator = ViewBindings.findChildViewById(rootView, id);
      if (detectionIndicator == null) {
        break missingId;
      }

      id = R.id.detection_status_text;
      TextView detectionStatusText = ViewBindings.findChildViewById(rootView, id);
      if (detectionStatusText == null) {
        break missingId;
      }

      id = R.id.error_text;
      TextView errorText = ViewBindings.findChildViewById(rootView, id);
      if (errorText == null) {
        break missingId;
      }

      id = R.id.loading_progress;
      ProgressBar loadingProgress = ViewBindings.findChildViewById(rootView, id);
      if (loadingProgress == null) {
        break missingId;
      }

      id = R.id.toggle_button;
      MaterialButton toggleButton = ViewBindings.findChildViewById(rootView, id);
      if (toggleButton == null) {
        break missingId;
      }

      id = R.id.torch_indicator;
      View torchIndicator = ViewBindings.findChildViewById(rootView, id);
      if (torchIndicator == null) {
        break missingId;
      }

      id = R.id.torch_status_text;
      TextView torchStatusText = ViewBindings.findChildViewById(rootView, id);
      if (torchStatusText == null) {
        break missingId;
      }

      return new ActivityMainBinding((ConstraintLayout) rootView, cameraPreview, controlPanel,
          detectionIndicator, detectionStatusText, errorText, loadingProgress, toggleButton,
          torchIndicator, torchStatusText);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
